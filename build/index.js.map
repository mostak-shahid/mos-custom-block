{"version":3,"file":"index.js","mappings":"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","sources":["webpack://mos-custom-block/external window [\"wp\",\"element\"]","webpack://mos-custom-block/webpack/bootstrap","webpack://mos-custom-block/webpack/runtime/compat get default export","webpack://mos-custom-block/webpack/runtime/define property getters","webpack://mos-custom-block/webpack/runtime/hasOwnProperty shorthand","webpack://mos-custom-block/webpack/runtime/make namespace object","webpack://mos-custom-block/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const {registerBlockType} = wp.blocks;\r\nconst {RichText, InspectorControls, ColorPalette, MediaUpload, MediaUploadCheck } = wp.editor;\r\nconst {PanelBody, IconButton, Button, RangeControl } = wp.components;\r\n\r\nregisterBlockType('mos/custom-cta',{\r\n    // built-in attributes\r\n    title: 'Call to Action',\r\n    description: 'Block to generate a custom Call to Action',\r\n    icon: 'format-image',\r\n    category: 'layout',\r\n  \r\n    // custom attributes\r\n  \r\n    attributes: {\r\n        content: {\r\n            type: 'string',\r\n        },\r\n        ctaBackgroundImage: {\r\n            type: 'string',\r\n            default: null\r\n        },\r\n        ctaOverlayColor: {\r\n            type: 'string',\r\n            default: '#ffffff'\r\n        },\r\n        ctaOverlayOpacity: {\r\n            type: 'number',\r\n            default: '0.3'\r\n        },\r\n        ctaTitle: {\r\n            type: 'string',\r\n            source: 'html',\r\n            selector: 'h2'\r\n        },\r\n        ctaTitleColor: {\r\n            type: 'string',\r\n            default: '#000000',\r\n        },\r\n        ctaBody: {\r\n            type: 'string',\r\n            source: 'html',\r\n            selector: 'p'\r\n        }\r\n    },\r\n  \r\n    \r\n    // built-in functions\r\n    \r\n    edit({attributes, setAttributes}){\r\n        const {ctaBackgroundImage, ctaOverlayColor, ctaOverlayOpacity, ctaTitle, ctaTitleColor, ctaBody} = attributes;\r\n        // custom functions\r\n        function updateAuthor(event) {\r\n            console.log(event.target.value);\r\n            setAttributes({content: event.target.value});\r\n        };\r\n        // const toggleSetting = () => setAttributes( { mySetting: ! mySetting } );\r\n        \r\n        function onSelectImage(newBackgroundImage) {\r\n            setAttributes({ctaBackgroundImage: newBackgroundImage.sizes.full.url});\r\n        };\r\n        function onChangeTitle(newTitle) {\r\n            setAttributes({ctaTitle: newTitle});\r\n        };\r\n        function onChangeBody(newBody) {\r\n            setAttributes({ctaBody: newBody});\r\n        };\r\n        function onTitleColorChange(newTitleColor) {\r\n            setAttributes({ctaTitleColor: newTitleColor});\r\n        };\r\n        // return <input type=\"text\" value={attributes.content} onChange={x => setAttributes({content: x.target.value})} />;\r\n        // return <input type=\"text\" value={attributes.content} onChange={updateAuthor} />;\r\n        return ([\r\n            <InspectorControls style={{marginBottom: '40px'}}>\r\n                <PanelBody title={'Font Color Settings'}>\r\n                    <p><strone>Select a Title Color: </strone></p>\r\n                    <ColorPalette \r\n                        value={ctaTitleColor}\r\n                        onChange={onTitleColorChange} />\r\n                </PanelBody>\r\n                <PanelBody title={'Background Image Settings'}>                    \r\n                    <p><strone>Select a Background Image: </strone></p>\r\n                    {/* <MediaUpload\r\n                        type=\"image\"\r\n                        value={ctaBackgroundImage}\r\n                        onSelect={onSelectImage}\r\n                        render={({open}) => {\r\n                            <IconButton\r\n                                onClick={open}\r\n                                icon=\"upload\"\r\n                                className=\"editor-media-placeholder__button is-button is-default is-large\">\r\n                                    Background Image\r\n                            </IconButton>\r\n                        }} /> */}\r\n                    <MediaUploadCheck>\r\n                        <MediaUpload\r\n                            // onSelect={ ( media ) =>\r\n                            //     console.log( 'selected ' + media.length )\r\n                            // }\r\n                            onSelect={onSelectImage}\r\n                            allowedTypes={ \"image\" }\r\n                            value={ ctaBackgroundImage }\r\n                            render={ ( { open } ) => (\r\n                                <IconButton \r\n                                    onClick={ open }\r\n                                    icon=\"upload\"\r\n                                    className=\"editor-media-placeholder__button is-button is-default is-large\">Open Media Library</IconButton>\r\n                            ) }\r\n                        />\r\n                    </MediaUploadCheck>          \r\n                    <p><strone>Overlay Color: </strone></p>\r\n                    <ColorPalette \r\n                        value={ctaOverlayColor}\r\n                        onChange={newOverlayColor => setAttributes({ctaOverlayColor: newOverlayColor})} />\r\n                    <RangeControl\r\n                        title={'Overlay Opacity'}\r\n                        value={ctaOverlayOpacity}\r\n                        onChange={newOverlayOpacity => setAttributes({ctaOverlayOpacity: newOverlayOpacity})}\r\n                        min=\"0\"\r\n                        max=\"1\"\r\n                        step=\"0.01\" />\r\n                </PanelBody>\r\n            </InspectorControls>,\r\n            <div class=\"cta-container\" style={{\r\n                backgroundImage:`url(${ctaBackgroundImage})`,\r\n                backgroundSize: 'cover',\r\n                backgroundPosition: 'center',\r\n                backgroundRepeat: 'no-repeat'\r\n            }}>\r\n                <RichText\r\n                    key=\"editable\"\r\n                    tagName=\"h2\"\r\n                    placeholder=\"Your CTA Title\"\r\n                    value={ctaTitle}\r\n                    onChange={onChangeTitle}\r\n                    style={{color: ctaTitleColor}} />\r\n                <RichText\r\n                    key=\"editable\"\r\n                    tagName=\"p\"\r\n                    placeholder=\"Your CTA Description\"\r\n                    value={ctaBody}\r\n                    onChange={onChangeBody} />\r\n            </div>\r\n        ]);\r\n    },\r\n  \r\n    save({attributes}){\r\n        const {ctaBackgroundImage, ctaOverlayColor, ctaOverlayOpacity, ctaTitle, ctaTitleColor, ctaBody} = attributes;\r\n        return (\r\n            <div class=\"cta-container\" style={{\r\n                backgroundImage:`url(${ctaBackgroundImage})`,\r\n                backgroundSize: 'cover',\r\n                backgroundPosition: 'center',\r\n                backgroundRepeat: 'no-repeat'\r\n            }}>\r\n                <h2 style={{color: ctaTitleColor}}>{ctaTitle}</h2>\r\n                <RichText.Content \r\n                    tagName=\"p\"\r\n                    value={ctaBody} />\r\n            </div>\r\n        );\r\n    },\r\n  });"],"names":["registerBlockType","wp","blocks","RichText","InspectorControls","ColorPalette","MediaUpload","MediaUploadCheck","editor","PanelBody","IconButton","Button","RangeControl","components","title","description","icon","category","attributes","content","type","ctaBackgroundImage","default","ctaOverlayColor","ctaOverlayOpacity","ctaTitle","source","selector","ctaTitleColor","ctaBody","edit","setAttributes","updateAuthor","event","console","log","target","value","onSelectImage","newBackgroundImage","sizes","full","url","onChangeTitle","newTitle","onChangeBody","newBody","onTitleColorChange","newTitleColor","createElement","style","marginBottom","onChange","onSelect","allowedTypes","render","open","onClick","className","newOverlayColor","newOverlayOpacity","min","max","step","class","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","key","tagName","placeholder","color","save","Content"],"sourceRoot":""}