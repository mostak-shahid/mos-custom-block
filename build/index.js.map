{"version":3,"file":"index.js","mappings":"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","sources":["webpack://mos-custom-block/external window [\"wp\",\"element\"]","webpack://mos-custom-block/webpack/bootstrap","webpack://mos-custom-block/webpack/runtime/compat get default export","webpack://mos-custom-block/webpack/runtime/define property getters","webpack://mos-custom-block/webpack/runtime/hasOwnProperty shorthand","webpack://mos-custom-block/webpack/runtime/make namespace object","webpack://mos-custom-block/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const {registerBlockType} = wp.blocks;\r\nconst {\r\n    RichText, // \r\n    InspectorControls, \r\n    ColorPalette, \r\n    MediaUpload, \r\n    MediaUploadCheck, \r\n    InnerBlocks, \r\n    BlockControls,\r\n    AligmentToolbar \r\n} = wp.editor;\r\nconst {\r\n    PanelBody, \r\n    IconButton, \r\n    Button, \r\n    RangeControl \r\n} = wp.components;\r\nconst ALLOWED_BLOCKS = ['core/button'];\r\n\r\n\r\nregisterBlockType('mos/custom-cta',{\r\n    // built-in attributes\r\n    title: 'Call to Action',\r\n    description: 'Block to generate a custom Call to Action',\r\n    icon: 'format-image',\r\n    category: 'layout',\r\n  \r\n    // custom attributes\r\n  \r\n    attributes: {\r\n        content: {\r\n            type: 'string',\r\n        },\r\n        ctaBackgroundImage: {\r\n            type: 'string',\r\n            default: null\r\n        },\r\n        ctaOverlayColor: {\r\n            type: 'string',\r\n            default: '#ffffff'\r\n        },\r\n        ctaOverlayOpacity: {\r\n            type: 'number',\r\n            default: '0.3'\r\n        },\r\n        ctaTitle: {\r\n            type: 'string',\r\n            source: 'html',\r\n            selector: 'h2'\r\n        },\r\n        ctaTitleColor: {\r\n            type: 'string',\r\n            default: '#000000',\r\n        },\r\n        ctaBody: {\r\n            type: 'string',\r\n            source: 'html',\r\n            selector: 'p'\r\n        },\r\n        ctaAlignment: {\r\n            type: 'string',\r\n            default: 'none'\r\n        }\r\n    },\r\n  \r\n    \r\n    // built-in functions\r\n    \r\n    edit: ({attributes, setAttributes}) => {\r\n        const {ctaBackgroundImage, ctaOverlayColor, ctaOverlayOpacity, ctaTitle, ctaTitleColor, ctaBody, ctaAlignment} = attributes;\r\n        // custom functions\r\n        function updateAuthor(event) {\r\n            console.log(event.target.value);\r\n            setAttributes({content: event.target.value});\r\n        };\r\n        // const toggleSetting = () => setAttributes( { mySetting: ! mySetting } );\r\n        \r\n        function onSelectImage(newBackgroundImage) {\r\n            setAttributes({ctaBackgroundImage: newBackgroundImage.sizes.full.url});\r\n        };\r\n        function onChangeTitle(newTitle) {\r\n            setAttributes({ctaTitle: newTitle});\r\n        };\r\n        function onChangeBody(newBody) {\r\n            setAttributes({ctaBody: newBody});\r\n        };\r\n        function onTitleColorChange(newTitleColor) {\r\n            setAttributes({ctaTitleColor: newTitleColor});\r\n        };\r\n        // return <input type=\"text\" value={attributes.content} onChange={x => setAttributes({content: x.target.value})} />;\r\n        // return <input type=\"text\" value={attributes.content} onChange={updateAuthor} />;\r\n        return ([\r\n            <InspectorControls style={{marginBottom: '40px'}}>\r\n                <PanelBody title={'Font Color Settings'}>\r\n                    <p><strone>Select a Title Color: </strone></p>\r\n                    <ColorPalette \r\n                        value={ctaTitleColor}\r\n                        onChange={onTitleColorChange} />\r\n                </PanelBody>\r\n                <PanelBody title={'Background Image Settings'}>                    \r\n                    <p><strone>Select a Background Image: </strone></p>\r\n                    {/* <MediaUpload\r\n                        type=\"image\"\r\n                        value={ctaBackgroundImage}\r\n                        onSelect={onSelectImage}\r\n                        render={({open}) => {\r\n                            <IconButton\r\n                                onClick={open}\r\n                                icon=\"upload\"\r\n                                className=\"editor-media-placeholder__button is-button is-default is-large\">\r\n                                    Background Image\r\n                            </IconButton>\r\n                        }} /> */}\r\n                    <MediaUploadCheck>\r\n                        <MediaUpload\r\n                            // onSelect={ ( media ) =>\r\n                            //     console.log( 'selected ' + media.length )\r\n                            // }\r\n                            onSelect={onSelectImage}\r\n                            allowedTypes={ \"image\" }\r\n                            value={ ctaBackgroundImage }\r\n                            render={ ( { open } ) => (\r\n                                <IconButton \r\n                                    onClick={ open }\r\n                                    icon=\"upload\"\r\n                                    className=\"editor-media-placeholder__button is-button is-default is-large\">Open Media Library</IconButton>\r\n                            ) }\r\n                        />\r\n                    </MediaUploadCheck>          \r\n                    <p><strone>Overlay Color: </strone></p>\r\n                    <ColorPalette \r\n                        value={ctaOverlayColor}\r\n                        onChange={newOverlayColor => setAttributes({ctaOverlayColor: newOverlayColor})} />\r\n                    <RangeControl\r\n                        title={'Overlay Opacity'}\r\n                        value={ctaOverlayOpacity}\r\n                        onChange={newOverlayOpacity => setAttributes({ctaOverlayOpacity: newOverlayOpacity})}\r\n                        min=\"0\"\r\n                        max=\"1\"\r\n                        step=\"0.01\" />\r\n                </PanelBody>\r\n            </InspectorControls>,\r\n            <div className=\"cta-container\" style={{\r\n                backgroundImage:`url(${ctaBackgroundImage})`,\r\n            }}>\r\n                <div className=\"cta-overlay\" style={{\r\n                    backgroundColor: ctaOverlayColor,\r\n                    opacity: ctaOverlayOpacity,\r\n                }}></div>\r\n                <div className=\"cta-text-wrapper\">\r\n                    \r\n                    <RichText\r\n                        key=\"editable\"\r\n                        tagName=\"h2\"\r\n                        placeholder=\"Your CTA Title\"\r\n                        value={ctaTitle}\r\n                        onChange={onChangeTitle}\r\n                        style={{color: ctaTitleColor}} />\r\n                    <RichText\r\n                        key=\"editable\"\r\n                        tagName=\"p\"\r\n                        placeholder=\"Your CTA Description\"\r\n                        value={ctaBody}\r\n                        onChange={onChangeBody} />\r\n                    <InnerBlocks allowedBlocks={ALLOWED_BLOCKS} />\r\n                </div>\r\n            </div>\r\n        ]);\r\n    },\r\n  \r\n    save: ({attributes}) => {\r\n        const {ctaBackgroundImage, ctaOverlayColor, ctaOverlayOpacity, ctaTitle, ctaTitleColor, ctaBody, ctaAlignment} = attributes;\r\n        return (\r\n            <div className=\"cta-container\" style={{\r\n                backgroundImage:`url(${ctaBackgroundImage})`,\r\n            }}>\r\n                <div className=\"cta-overlay\" style={{\r\n                    backgroundColor: ctaOverlayColor,\r\n                    opacity: ctaOverlayOpacity,\r\n                }}></div>\r\n                <div className=\"cta-text-wrapper\">\r\n                    <h2 style={{color: ctaTitleColor}}>{ctaTitle}</h2>\r\n                    <RichText.Content \r\n                        tagName=\"p\"\r\n                        value={ctaBody} />\r\n                    <InnerBlocks.Content />\r\n                </div>\r\n            </div>\r\n        );\r\n    },\r\n  });"],"names":["registerBlockType","wp","blocks","RichText","InspectorControls","ColorPalette","MediaUpload","MediaUploadCheck","InnerBlocks","BlockControls","AligmentToolbar","editor","PanelBody","IconButton","Button","RangeControl","components","ALLOWED_BLOCKS","title","description","icon","category","attributes","content","type","ctaBackgroundImage","default","ctaOverlayColor","ctaOverlayOpacity","ctaTitle","source","selector","ctaTitleColor","ctaBody","ctaAlignment","edit","setAttributes","updateAuthor","event","console","log","target","value","onSelectImage","newBackgroundImage","sizes","full","url","onChangeTitle","newTitle","onChangeBody","newBody","onTitleColorChange","newTitleColor","createElement","style","marginBottom","onChange","onSelect","allowedTypes","render","open","onClick","className","newOverlayColor","newOverlayOpacity","min","max","step","backgroundImage","backgroundColor","opacity","key","tagName","placeholder","color","allowedBlocks","save","Content"],"sourceRoot":""}